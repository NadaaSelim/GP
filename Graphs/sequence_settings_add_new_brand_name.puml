@startuml

actor "__client__:__user__" as client
boundary UI
control "__settingsCont__: settings_controller" as SC
control "__accsCont__:__account_controller__" as AC
entity Brand
database database

activate client 
activate UI
client -> UI: add another name to track
activate AC
UI -> AC: getUserBrands(client)
activate database
AC -> database: fetch all user brands
AC --> UI:
deactivate AC
UI --> client: Show all User's Brands
UI <- client: select brand
activate SC
UI -> SC : getBrandAltNames(userSelectedBrand)
activate Brand
SC -> Brand: getBrandAltNames(userSelectedBrand)
Brand -> database : query for all brand alt names
SC --> UI: list of names
UI --> client : display all existing brand names
UI -> client: enter new names with language
UI -> SC: update_brand_names(names)
SC -> Brand: add_names(names)
Brand -> database : query to add names
deactivate database
deactivate Brand
SC -> UI : added names
deactivate SC
UI -> client: added names
deactivate client 
deactivate UI


@enduml