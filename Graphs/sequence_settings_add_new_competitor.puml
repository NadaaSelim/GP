@startuml

actor "__client__:__user__" as client
boundary UI
control "__settingsCont__: __settings_controller__" as SC
control "__brandCont__: __brand_controller__" as BC

control "__accsCont__:__account_controller__" as AC
entity Brand
database database

activate client 
activate UI
client -> UI: view settings page
client -> UI: add competitor
activate AC
UI -> AC: getUserBrands(client)
activate database
AC -> database: fetch all user brands
AC --> UI: return user's brands
deactivate AC
UI --> client: Show all User's Brands
UI <- client: select brand
activate BC
UI <- client : add competitor brand info
UI -> BC : getBrandCompetitors(userSelectedBrand)
activate Brand
BC -> Brand: getCompetitors()
Brand -> database : query for all brand competitor names
BC --> UI: list of competitor names
deactivate BC
UI --> client : display all existing competitor brand names
UI --> client: enter new competitor name with alt names
client -> UI : enter competitor brand
activate SC
UI -> SC: addcompetitor(userSelectedBrand,competitor)
SC -> Brand: addcompetitor(competitor)
Brand -> database : query to add competitor
deactivate database
deactivate Brand
SC -> UI : added competitor
deactivate SC
UI -> client: added competitor
deactivate client 
deactivate UI


@enduml