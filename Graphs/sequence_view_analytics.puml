@startuml
actor "__client__:__user__" as client
boundary UI
control "__analysisCont__:__analysis_controller__" as AC
control "__dataColCont__: __data_collection_controller__" as DC
control "__accsCont__:__account_controller__" as AccsC
entity Brand
database database

activate client
client -> UI: view analytics
activate UI
UI -> AccsC: getUserBrands(client)
activate AccsC
activate database

AccsC -> database: fetch all user brands
AccsC --> UI:
deactivate AccsC
UI <- client: specify the brand
activate AC
UI -> AC: getAvailablePlatforms()
AC -> database: fetch all available platforms
database --> AC: return all available platform names
AC --> UI: 
activate Brand
UI <- client : select platforms
AC -> Brand: getBrandAltNames(userSelectedBrand)
Brand -> database: query for all alt brand names
database --> Brand:
Brand --> AC:
deactivate Brand
activate DC
AC -> DC : web_scrape(platforms, brand names)
DC --> AC: returns web scrapping results
deactivate DC
AC -> database : adds analysis results
deactivate database
AC --> UI : results are ready
deactivate AC
UI --> client : display results
deactivate UI
deactivate client


@enduml