@startuml
skinparam linetype ortho

entity User{
    -id:string
    -username:string
    -email:string
    -password:string
    -brands:list<Brand>
    -isLoggedin:boolean
    User()
    User(in username:string ,in email:string ,in password:string ,in brands:list<brand>)
    +get_username():string
    +get_email():string
    +get_password():string
    +get_brands():list<Brand>
    +set_password(in password:string):void
    +set_username(in username:string):void
    +set_email(in email:string):void
    +add_brand(in brand:Brand):boolean
    +remove_brand(in brand:Brand):boolean
    +user_in_db():boolean
}

entity Brand{
    -id:string
    -brandnames:string
    -altnames:list<string>
    -competitors:list<Brand>
    -analysis:AnalysisResult
    -reviews:list<Review>
    Brand()
    Brand(in brandname:string ,in altnames:list<string> ,in competitiors:list<brand>)
    +get_brandname():string
    +get_altnames():list<string>
    +get_competitors():lsit<Brand>
    +get_analysis():AnalysisResult
    +set_brandname(in brandname:string):void
    +set_altnames(in altnames:list<string>):void
    +set_analysis(in analysis:AnalysisResult):void
    +set_reviews(in reviews:list<Review>):void
    +set_competitors(in competitiors:list<Brands>):void
    +add_competitor(in competitor:Brand):boolean
    +remove_competitor(in competitor:Brand):boolean
    +add_altname(in altname:string):boolean
    +remove_altname(in altname:string):boolean
    

} 


note right of Brand::altnames
    alternative names for brands , a brand can have more
    than one name that it is famous for , for example Macdonalds
    can be Mac 

end note 

entity AnalysisResult{
    -id:string
    -associated_words:map<string,int>
    -sentiment_score:long
    -start_date:date
    -end_date:date
    -negative:long
    -neutral:long
    -poistive:long
    Report()
    Report(in start:date ,in end:date)
    +get_associated_words():map<string,int>
    +get_sentiment_score():long
    +get_start_date():date
    +get_end_date():date
    +get_negative():long
    +get_neutral():long
    +get_positive():long
    +set_start_date(in start_date:date):void
    +set_start_date(in end_date:date):void
    
}

note right of AnalysisResult::examples_negative
    a few examples of the bad reviews not all reviews

end note 



class AccountsController {
    +user_exists(in client:User):boolean
    +sign_up(username,password,email):boolean
    +log_in(in username:string in password:string):boolean
    +get_user_brands(in client:User):list<brands>
    +add_brand(in user:User, in brand:Brand): boolean
    +get_user(in username:string):User


}

class SettingsController{
    +add_altname(in selected_brand:Brand ,in name:string):boolean
    +add_competitor(in selected_brand:Brand ,in competitor:Brand):boolean
    +add_brand(in user:User, in brand:Brand): boolean
    +change_password(in user:User,in oldPass:string,in newPass:string):boolean
}

class BrandController{
    +get_brand_altnames(in selected_brand:Brand):list<string>
    +get_brand_competitiors(in selected_brand:Brand):list<Brand>


}

class AnalysisController{
    +get_available_platforms():list<platform>
    +start_analysis(in platforms:list<string>, in competitors:list<Brand> ):list<AnaylsisResult>
    +get_negative_reviews(in number_of_reviews:int ,in brand:Brand):list<Review>
    +get_poistive_reviews(in number_of_reviews:int ,in brand:Brand):list<Review>
    +get_neutral_reviews(in number_of_reviews:int ,in brand:Brand):list<Review>

}

class DataCollectionController{
    +web_scrape(in platforms:list<string>,in brands: list<brand> ):
}

class ReportController{
    +get_brand_results(in selected_brand:Brand):AnalysisResult
    +generate_report(in dates: list<date>, in platforms:list<string>)
}

entity Platform{
    - name:string
    - id:string
    Platform()
    Platform(in name:string ,in id:string)
    +get_all_platforms():list<Platform>
}

entity Review{
    -id:string
    -review_text:string
    -date:Date
    -sentiment_score:long
    -platform:Platform
    Review()
    Review(in review_text:string,in date:Date )
    +get_review_text():string
    +get_sentiment_score():long
    +get_date():Date
    +get_platform():Platform
    +set_review_text(in text:string):void
    +set_date(in date:Date):void
    +set_sentiment_score(in score:long):void
    +set_platform(in platform:Platform):void
}
Brand  "1" o--"0..*" Brand:competes
User   "1" *-right- "1..*" Brand:has 
Brand  "1" o-- "1" AnalysisResult:has
Brand  "1" o-- "*" Review:has
Review "1" *-- "1" Platform:has
BrandController ..> Brand
AccountsController ..> User
SettingsController .left.> Brand
SettingsController ..> User
DataCollectionController ..> Platform
AnalysisController ..> Platform
AnalysisController ..> Brand
AnalysisController ..> AnalysisResult
AnalysisController ..> Review
ReportController ..> Platform
ReportController ..> Brand




    


@enduml